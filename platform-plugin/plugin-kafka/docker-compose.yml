version: '2'
networks:
  my_kafka:

services:
  # zookeeper
  zoo1:
    container_name: zoo1
    image: zookeeper
    ports:
      - "2181:2181"
    networks:
      - my_kafka

  # kafka
  kafka_1:
    container_name: kafka_1
    image: wurstmeister/kafka
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.31.5
      # 暴露给外部的listeners
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.31.5:9092
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo1
    networks:
      - my_kafka

  kafka_2:
    container_name: kafka_2
    image: wurstmeister/kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.31.5
      # 暴露给外部的listeners
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.31.5:9093
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo1
    networks:
      - my_kafka

  kafka-manager:
    container_name: kafka-manager
    image: sheepkiller/kafka-manager              ## 镜像：开源的web管理kafka集群的界面
    ports:
      - "9000:9000"
    links:            # 连接本compose文件创建的container
      - kafka_1
      - kafka_2
    external_links:   # 连接本compose文件以外的container
      - zoo1
    environment:
      ZK_HOSTS: zoo1
      KAFKA_BROKERS: kafka_1, kafka_2
    depends_on:
      - kafka_2
      - kafka_1
    networks:
      - my_kafka
