<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <properties resource="application.yml"/>

    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>


        <!-- 这个插件 -->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
        </plugin>
        <!-- 这个插件给实体类添加toString()方法  -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <!-- 这个插件给由MBG生成的Java模型对象增加了equals和hashCode方法 -->
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>

        <!-- 数据库配置 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/test"
                        userId="root"
                        password="123456">
        </jdbcConnection>

        <!-- model类生成 -->
        <javaModelGenerator targetPackage="com.example.userserver.model" targetProject="src/main/java">
<!--            <property name="rootClass" value="com.demo.common.model.BaseModel"/>-->
        </javaModelGenerator>

        <!-- XML文件生成 -->
        <sqlMapGenerator targetPackage="mappers" targetProject="src/main/resources/mappers">

        </sqlMapGenerator>

        <!-- dao类生成 -->
        <javaClientGenerator targetPackage="com.example.userserver.dao" targetProject="src/main/java"
                             type="XMLMAPPER">
        </javaClientGenerator>

        <!-- 要生成的表 -->
<!--        <table tableName="sys_log">-->
            <!--mysql 配置-->
            <!--<generatedKey column="id" sqlStatement="Mysql" identity="true"/>-->
            <!--oracle 配置-->
            <!--<generatedKey column="id" sqlStatement="select SEQ_{1}.nextval from dual" identity="false" type="pre"/>-->
<!--        </table>-->

<!--        <table tableName="user_info"></table>-->
<!--        <table tableName="user_login"></table>-->
<!--        <table tableName="user_role"></table>-->
<!--        <table tableName="user_menu"></table>-->

                <table tableName="user_rel_role"></table>
                <table tableName="user_rel_role_menu"></table>
    </context>
</generatorConfiguration>
